#CMakeLists for /

# Name of the project
PROJECT(kvirc)

# Minimum cmake version
CMAKE_MINIMUM_REQUIRED(VERSION 2.4.0)

# Some vars
SET(KVI_PACKAGE "kvirc")
SET(KVI_VERSION "4.0.0")
SET(KVI_VERSION_BRANCH "4.0")

SET(LIBS)

# Skel from cmake.org
#FIND_PACKAGE(PNG)
#IF(PNG_FOUND)
#	INCLUDE_DIRECTORIES(${PNG_INCLUDE_DIR})
#	
#	ADD_EXECUTABLE(imageviewer main.c image.c)
#	TARGET_LINK_LIBRARIES(imageviewer ${PNG_LIBRARY})
#ENDIF(PNG_FOUND)

# Check for Qt4
FIND_PACKAGE(Qt4 REQUIRED)
IF(Qt4_FOUND)
	INCLUDE_DIRECTORIES(${QT_INCLUDE_DIR})
	SET(LIBS ${LIBS} ${QT_LIBRARIES})
ENDIF(Qt4_FOUND)

# Check for Perl
FIND_PACKAGE(Perl REQUIRED)
IF(Perl_FOUND)
	INCLUDE_DIRECTORIES(${Perl_INCLUDE_DIR})
	SET(LIBS ${LIBS} ${Perl_LIBRARIES})
ENDIF(Perl_FOUND)

# Check for OpenSSL
FIND_PACKAGE(OpenSSL)
IF(OpenSSL_FOUND)
	INCLUDE_DIRECTORIES(${OpenSSL_INCLUDE_DIR})
	SET(LIBS ${LIBS} ${OpenSSL_LIBRARIES})
ENDIF(OpenSSL_FOUND)

# Check for ZLib
FIND_PACKAGE(ZLIB REQUIRED)
IF(ZLIB_FOUND)
	INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIR})
	SET(LIBS ${LIBS} ${ZLIB_LIBRARIES})
ENDIF(ZLIB_FOUND)

# Check for X11
IF(UNIX)
	IF(APPLE)
	ELSE(APPLE)
	# Linux
	FIND_PACKAGE(X11)
		IF(X11_FOUND)
        		INCLUDE_DIRECTORIES(${X11_INCLUDE_DIR})
			SET(LIBS ${LIBS} ${X11_LIBRARIES})
		ENDIF(X11_FOUND)
	ENDIF(APPLE)
ENDIF(UNIX)

# Check for threads
FIND_PACKAGE(Threads REQUIRED)
IF(Threads_FOUND)
	INCLUDE_DIRECTORIES(${Threads_INCLUDE_DIR})
	SET(LIBS ${LIBS} ${Threads_LIBRARIES})
ENDIF(Threads_FOUND)

#CMakeUnixFindMake.cmake
#FindDoxygen.cmake
#FindCygwin.cmake
#CMakeFindXCode.cmake
#CheckLibraryExists.cmake

# Search for subdirectories
SUBDIRS(src data)
